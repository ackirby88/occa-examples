/**
 * \file    test.okl
 * \author  akirby
 *
 * \brief   test functions for OCCA.
 */

/* header files */
#include "./okl/precision_types.h"

Real test_okl_x(int a){return 100.0+a;}
Real test_okl_y(int a){return 200.0+a;}
Real test_okl_z(int a){return 300.0+a;}

#define TEST_DEF_0(D) test_okl_x(D)
#define TEST_DEF_1(D) test_okl_y(D)
#define TEST_DEF_2(D) test_okl_z(D)

#define TEST_DEF(N,D) TEST_DEF_##N(D) // Unwraps N

typedef const Real real_array_NVARx16 @dim(NVAR,bctot);

@kernel void test_okl(Real *val){
    for(int b = 0; b < 4; ++b; @outer){
        for(int t = 0; t < 16; ++t; @inner){
            val[0] = TEST_DEF(1,5); // expands to TEST_DEF_1(D) = test_okl_y(D)
        }
    }
}

@kernel void test_okl_func_runtime(const int nsize,
                         @restrict Real *val_array){
    // test_okl_func is set through platform.props (see Solver.cxx)
    for(int i = 0; i < nsize; ++i; @tile(p_blockSize,@outer,@inner)){
        val_array[i] = test_okl_func(5+i);
    }
}